(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["user_reg"],{

/***/ "./client/src/js/user_reg.js":
/*!***********************************!*\
  !*** ./client/src/js/user_reg.js ***!
  \***********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./client/src/js/base.js\");\n/* harmony import */ var _mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixin */ \"./client/src/js/mixin.js\");\n/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @common/util */ \"./client/src/common/util.js\");\n\n\n\nnew _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  el: '#app',\n  mixins: [_mixin__WEBPACK_IMPORTED_MODULE_1__[\"baseMixin\"]],\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var that = this;\n      that.data.referralCode = Object(_common_util__WEBPACK_IMPORTED_MODULE_2__[\"getUrlParams\"])('referralCode');\n      that.$api.register.userRegister({\n        data: that.data\n      }).then(function (res) {\n        if (res.code == 0) {\n          _this.$comp.toast({\n            text: res.msg\n          });\n\n          window.location.href = res.data.url;\n        } else {\n          _this.$comp.toast({\n            text: res.msg,\n            color: 'error'\n          });\n        } // that.tdata = res.data;\n\n      }).catch(function (res) {\n        console.log('eeeeeeeeeeeee');\n        console.log(res);\n      });\n    },\n    sendSMS: function sendSMS() {\n      var _this2 = this;\n\n      var that = this;\n      that.sending = true;\n      that.smsDisabled = true;\n      that.identifyBtnText = 59;\n      that.sendInterval = setInterval(function () {\n        if (that.identifyBtnText == 1) {\n          that.sending = false; //因为直接写watch会出现无法监听sending，所以写到这里\n\n          that.smsDisabled = !that.phoneRex.test(that.data.phone_num);\n          that.identifyBtnText = '发送验证码';\n          clearInterval(that.sendInterval);\n        } else {\n          that.identifyBtnText--;\n        }\n      }, 1000); // console.log('***********');\n      // console.log(that.data.phone_num);\n\n      that.$api.user.sendSMS({\n        data: {\n          phone_num: that.data.phone_num\n        }\n      }).then(function (res) {\n        if (res.code == 0) {\n          _this2.$comp.toast({\n            text: res.msg\n          });\n        } else {\n          _this2.$comp.toast({\n            text: res.msg,\n            color: 'error'\n          });\n        }\n      }).catch(function (res) {\n        _this2.$comp.toast({\n          text: '发送失败,请重试.',\n          color: 'error'\n        });\n      });\n    },\n    register_protocol: function register_protocol() {\n      var _this3 = this;\n\n      //注册协议\n      var that = this;\n      that.protocol.id = 1;\n      that.$api.protocol.getContent({\n        data: that.protocol\n      }).then(function (res) {\n        that.register_title = res.data.title;\n        that.register_content = res.data.content; // that.tdata = res.data;\n      }).catch(function (res) {\n        _this3.$comp.toast({\n          text: '获取数据失败，请重试.',\n          color: 'error'\n        });\n      }); // that.dialog = true;\n    }\n  },\n  data: function data() {\n    var _this4 = this;\n\n    return {\n      valid: false,\n      show_pass: false,\n      show_pass1: false,\n      dialog: false,\n      submitLoading: false,\n      register_title: '',\n      register_content: '',\n      protocol: {\n        id: ''\n      },\n      data: {\n        username: '',\n        password: '',\n        rePassword: '',\n        phone_num: '',\n        identify_code: '',\n        agree: false\n      },\n      sending: false,\n      userRex: /^[a-zA-Z]([_a-zA-Z0-9]{6,12})+$/,\n      phoneRex: /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0-9])|(17[0-9])|(19[0-9])|16[6])\\d{8}$/,\n      userNameRoules: [function (value) {\n        return !!value || '用户名必填';\n      }, function (value) {\n        // console.log('eeeeeeeeeeeee');\n        // console.log(this.userRex.test(value))\n        return _this4.userRex.test(value) || '用户名6至12位，以字母开头,字母，数字，减号，下划线';\n      }],\n      phoneRoules: [function (value) {\n        return !!value || '手机号必填';\n      }, function (value) {\n        return _this4.phoneRex.test(value) || '手机号不正确';\n      }],\n      passwordRoules: [function (value) {\n        return !!value || '密码是必填';\n      }, function (value) {\n        return value.length >= 6 || '密码最少6位';\n      }],\n      rePasswordRoules: [function (value) {\n        return !!value || '确认密码是必填';\n      }, function (value) {\n        return _this4.data.password == value || '两次输入的密码不一致';\n      }],\n      IdentifyingCodeRoules: [function (value) {\n        return !!value || '验证码必填';\n      }],\n      checkAgree: [function (value) {\n        return !!value || '';\n      }],\n      identifyBtnText: '发送验证码',\n      sendInterval: null,\n      smsDisabled: true\n    };\n  },\n  watch: {\n    data: {\n      handler: function handler(newValue, oldValue) {\n        //不是发送，并且检验通过，disable为false，否则true\n        this.smsDisabled = this.sending || !this.phoneRex.test(newValue.phone_num);\n      },\n      deep: true\n    }\n  }\n});\n\n//# sourceURL=webpack:///./client/src/js/user_reg.js?");

/***/ })

},[["./client/src/js/user_reg.js","runtime","vendor","common"]]]);