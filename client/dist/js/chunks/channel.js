(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["channel"],{

/***/ "./client/src/js/channel.js":
/*!**********************************!*\
  !*** ./client/src/js/channel.js ***!
  \**********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./client/src/js/base.js\");\n/* harmony import */ var _mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixin */ \"./client/src/js/mixin.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n\n\nnew _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  el: '#app',\n  mixins: [_mixin__WEBPACK_IMPORTED_MODULE_1__[\"mixinExt\"]],\n  created: function created() {\n    var that = this;\n    that.$api.channel.get().then(function (res) {\n      that.tdata = res.data;\n    }).catch(function (res) {\n      console.log('eeeeeeeeeeeee');\n      console.log(res);\n    });\n  },\n  mounted: function mounted() {\n    var that = this;\n\n    for (var i = 0; i < that.tdata.length; i += 1) {\n      var item = that.tdata[i];\n      that.$set(that.$refs.dTable.expanded, item.id, true);\n    }\n\n    setTimeout(function () {\n      that.calcWidth();\n    }, 500);\n  },\n  methods: {\n    onTabelResize: function onTabelResize() {\n      //这里执行速度快,第一次会报错\n      try {\n        this.calcWidth();\n      } catch (error) {}\n    },\n    calcWidth: function calcWidth() {\n      var td1Width = this.$refs.td1.offsetWidth,\n          td2Width = this.$refs.td2.offsetWidth,\n          td3Width = this.$refs.td3.offsetWidth,\n          td4Width = this.$refs.td4.offsetWidth,\n          td5Width = this.$refs.td5.offsetWidth,\n          td6Width = this.$refs.td6.offsetWidth,\n          td7Width = this.$refs.td7.offsetWidth,\n          td8Width = this.$refs.td8.offsetWidth; // this.subWidth.table['paddingLeft'] = this.subWidth.line['marginLeft'] = td1Width + 'px';\n\n      this.subWidth.table['paddingLeft'] = td1Width + 'px';\n      this.subWidth.td2.width = td2Width + 'px';\n      this.subWidth.td3.width = td3Width + 'px';\n      this.subWidth.td4.width = td4Width + 'px';\n      this.subWidth.td5.width = td5Width + 'px';\n      this.subWidth.td6.width = td6Width + 'px';\n      this.subWidth.td7.width = td7Width + 'px';\n      this.subWidth.td8.width = td8Width + 'px'; // this.subWidth.line['width'] = (this.$refs.tr - td1Width) + 'px';\n    },\n    remove: function remove(item) {\n      this.chips.splice(this.chips.indexOf(item), 1);\n      this.chips = _toConsumableArray(this.chips);\n    },\n    addChannel: function addChannel() {\n      // alert('aaa');\n      var that = this;\n      that.submitLoading = true;\n      that.$api.channel.add({\n        data: that.addItem\n      }).then(function (res) {\n        if (res.code == 0) {\n          that.message.text = res.msg;\n          that.message.color = 'success';\n          that.message.show = true; // that.showAdd = false;\n          //重刷页面,后台负责跳转\n\n          setTimeout(function () {\n            window.location.reload();\n          }, 3000);\n        } else {\n          that.message.text = res.msg;\n          that.message.color = 'error';\n          that.message.show = true;\n          that.submitLoading = false;\n        }\n      }).catch(function (res) {\n        console.log('***********');\n      });\n    },\n    showSales: function showSales(channel_id, channel_name) {\n      var that = this;\n      that.$api.channel.getSales({\n        data: {\n          'channel_id': channel_id\n        }\n      }).then(function (res) {\n        that.saliesLists = res.data.sales; //绑定数据\n\n        that.select = res.data.child; //选中的数据\n      }).catch(function (res) {\n        console.log('eeeeeeeeeeeee');\n        console.log(res);\n      });\n      that.channel_id = channel_id;\n      that.channel_name = channel_name;\n      that.showAddSales = true;\n    },\n    addSales: function addSales() {\n      var that = this;\n      that.select.push(that.channel_name);\n      that.select.push(that.channel_id);\n      that.$api.channel.addSales({\n        data: that.select\n      }).then(function (res) {\n        if (res.code == 0) {\n          that.message.text = res.msg;\n          that.message.color = 'success';\n          that.message.show = true; // that.showAdd = false;\n          //重刷页面,后台负责跳转\n\n          setTimeout(function () {\n            window.location.reload();\n          }, 3000);\n        } else {\n          that.message.text = res.msg;\n          that.message.color = 'error';\n          that.message.show = true; // that.submitLoading = false;\n        }\n      }).catch(function (res) {\n        console.log('***********');\n      }); // console.log(that.select);\n    },\n    CopyUrl: function CopyUrl(url) {\n      var that = this; //复制链接\n\n      var textToClipboard = url;\n      var success = true;\n\n      if (window.clipboardData) {\n        // Internet Explorer\n        window.clipboardData.setData(\"Text\", textToClipboard);\n      } else {\n        // create a temporary element for the execCommand method\n        var forExecElement = that.CreateElementForExecCommand(textToClipboard);\n        /* Select the contents of the element\r\n            (the execCommand for 'copy' method works on the selection) */\n\n        that.SelectContent(forExecElement);\n        var supported = true; // UniversalXPConnect privilege is required for clipboard access in Firefox\n\n        try {\n          if (window.netscape && netscape.security) {\n            netscape.security.PrivilegeManager.enablePrivilege(\"UniversalXPConnect\");\n          } // Copy the selected content to the clipboard\n          // Works in Firefox and in Safari be:fore version 5\n\n\n          success = document.execCommand(\"copy\", false, null);\n        } catch (e) {\n          success = false;\n        } // remove the temporary element\n\n\n        document.body.removeChild(forExecElement);\n      }\n\n      if (success) {\n        alert('复制成功');\n      } else {\n        alert('复制失败');\n      }\n    },\n    CreateElementForExecCommand: function CreateElementForExecCommand(textToClipboard) {\n      var forExecElement = document.createElement(\"div\"); // place outside the visible area\n\n      forExecElement.style.position = \"absolute\";\n      forExecElement.style.left = \"-10000px\";\n      forExecElement.style.top = \"-10000px\"; // write the necessary text into the element and append to the document\n\n      forExecElement.textContent = textToClipboard;\n      document.body.appendChild(forExecElement); // the contentEditable mode is necessary for the  execCommand method in Firefox\n\n      forExecElement.contentEditable = true;\n      return forExecElement;\n    },\n    SelectContent: function SelectContent(element) {\n      // first create a range\n      var rangeToSelect = document.createRange();\n      rangeToSelect.selectNodeContents(element); // select the contents\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(rangeToSelect);\n    }\n  },\n  data: function data() {\n    return {\n      select: [],\n      channel_id: '',\n      channel_name: '',\n      subWidth: {\n        table: {\n          paddingLeft: '0px'\n        },\n        td2: {\n          width: '0px'\n        },\n        td3: {\n          width: '0px'\n        },\n        td4: {\n          width: '0px'\n        },\n        td5: {\n          width: '0px'\n        },\n        td6: {\n          width: '0px'\n        },\n        td7: {\n          width: '0px'\n        },\n        td8: {\n          width: '0px'\n        } // line: {\n        //     marginLeft: '0px',\n        //     width: '0px'\n        // }\n\n      },\n      // infoWidth: {\n      //     width: '0px'\n      // },\n      // qrcodeWidth: {\n      //     width: '0px'\n      // },\n      // subRight: {\n      //     width: '0px'\n      // },\n      // docWidth: {\n      //     width: '0px'\n      // },\n      // achWidth: {\n      //     width: '0px'\n      // },\n      // subUrlWidth: {\n      //     width: '0px'\n      // },\n      // actWidth: {\n      //     width: '0px'\n      // },\n      message: {\n        show: false,\n        text: '',\n        time: 3000,\n        color: 'success'\n      },\n      submitLoading: false,\n      showAdd: false,\n      showAddSales: false,\n      showAddUser: false,\n      show_pass: false,\n      saliesLists: [{\n        username: '',\n        uid: ''\n      }],\n      chips: [],\n      addItem: {\n        channel_name: '',\n        channel_info: '',\n        qr_code_info: ''\n      },\n      // items: ['页面1', '页面2'],\n      theader: [{\n        align: 'left',\n        // value: '',\n        sortable: false\n      }, {\n        align: 'left',\n        value: 'channel_name',\n        sortable: false\n      }, {\n        align: 'left',\n        // value: '',\n        sortable: false\n      }, {\n        align: 'left',\n        value: 'qr_code_info',\n        sortable: false\n      }, {\n        align: 'left',\n        value: 'url_code',\n        sortable: false\n      }, {\n        align: 'right',\n        value: 'chan_doc_num',\n        sortable: false\n      }, {\n        align: 'right',\n        value: 'chan_pfm_obj',\n        sortable: false\n      }, {\n        align: 'center',\n        value: '',\n        sortable: false\n      }],\n      tdata: []\n    };\n  }\n});\n\n//# sourceURL=webpack:///./client/src/js/channel.js?");

/***/ })

},[["./client/src/js/channel.js","runtime","vendor"]]]);