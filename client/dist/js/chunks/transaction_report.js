(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["transaction_report"],{

/***/ "./client/src/js/transaction_report.js":
/*!*********************************************!*\
  !*** ./client/src/js/transaction_report.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./client/src/js/base.js\");\n/* harmony import */ var _mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixin */ \"./client/src/js/mixin.js\");\n/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/util */ \"./client/src/common/util.js\");\n\n\n\nnew _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  el: '#app',\n  mixins: [_mixin__WEBPACK_IMPORTED_MODULE_1__[\"mixinExt\"]],\n  created: function created() {\n    var that = this,\n        dyMonth = Object(_common_util__WEBPACK_IMPORTED_MODULE_2__[\"getCurMonthDay\"])();\n    that.dateFm = dyMonth.monthDayStart;\n    that.dateTo = dyMonth.monthDayCur;\n    that.setExportUrl();\n    that.getReomteData();\n  },\n  data: function data() {\n    return {\n      firstLoading: true,\n      pager: {\n        totalVisible: 7,\n        count: 1,\n        index: 1,\n        size: 10\n      },\n      tableType: [{\n        text: 'Transaction History',\n        value: 0\n      }, {\n        text: 'Registration History',\n        value: 1\n      }],\n      currentDataType: 0,\n      dateFm: null,\n      dateTo: null,\n      menu: false,\n      menu1: false,\n      theader: [],\n      tableLoading: false,\n      transactionHead: [{\n        text: 'Firt Name',\n        align: 'left',\n        value: 'firstName',\n        sortable: false\n      }, {\n        text: 'Phone',\n        align: 'left',\n        value: 'phone',\n        sortable: false\n      }, {\n        text: 'Amount',\n        align: 'right',\n        value: 'quantity * unitprice ',\n        sortable: false\n      }, {\n        text: 'Usage',\n        align: 'left',\n        value: 'description',\n        sortable: false\n      }, {\n        text: 'Date',\n        align: 'left',\n        value: 'created_at',\n        sortable: false\n      }],\n      registrationHead: [{\n        text: 'Firt Name',\n        align: 'left',\n        value: 'firstName',\n        sortable: false\n      }, {\n        text: 'Phone',\n        align: 'left',\n        value: 'phone',\n        sortable: false\n      }, {\n        text: 'Ref. Code',\n        align: 'left',\n        value: 'referralCode',\n        sortable: false\n      }, {\n        text: 'Date',\n        align: 'left',\n        value: 'created_at',\n        sortable: false\n      }],\n      tdata: [],\n      dataTimer: null,\n      exportUrl: \"\"\n    };\n  },\n  watch: {\n    currentDataType: {\n      handler: function handler(newValue, oldValue) {\n        var that = this;\n\n        if (newValue == 0) {\n          that.theader = that.transactionHead;\n        } else if (newValue == 1) {\n          that.theader = that.registrationHead;\n        }\n\n        if (this.firstLoading) {\n          return;\n        }\n\n        that.setExportUrl();\n        this.pager.index = 1;\n        that.getReomteData();\n      },\n      immediate: true\n    },\n    dateFm: function dateFm(newValue, oldValue) {\n      if (this.firstLoading) {\n        return;\n      }\n\n      this.setExportUrl();\n      this.getReomteData();\n    },\n    dateTo: function dateTo(newValue, oldValue) {\n      if (this.firstLoading) {\n        return;\n      }\n\n      this.setExportUrl();\n      this.getReomteData();\n    }\n  },\n  methods: {\n    setExportUrl: function setExportUrl() {\n      this.exportUrl = \"/transaction/exportExcel?type=\".concat(this.currentDataType, \"&dateFm=\").concat(this.dateFm, \"&dateTo=\").concat(this.dateTo);\n    },\n    // exportExcel() {\n    //     let that = this;\n    //     that.$api.transaction.exportExcel({\n    //         data: {\n    //             type: that.currentDataType,\n    //             dateFm: that.dateFm,\n    //             dateTo: that.dateTo,\n    //             // pageSize: that.pager.size,\n    //             // pageIndex: that.pager.index\n    //         }\n    //     }).then((res)=>{\n    //         console.log(res);\n    //     })\n    // },\n    changePage: function changePage() {\n      this.getReomteData();\n    },\n    getReomteData: function getReomteData() {\n      var that = this; // 发送数据类型、\n      // {\n      //     data: {\n      //         type: 0 | 1 , 0交易报告， 1注册历史\n      //         dateFm: '开始时间'\n      //         dateTo: '结束时间'\n      //         pageSize: 每页显示多少页\n      //         pageIndex: 当前页\n      //     }\n      // }\n      //返回数据\n      // {\n      //     data: {\n      //         list: [],\n      //         pageIndex: 1,\n      //         pageCount: 10\n      //     },\n      //     code: 0 | 其他数值\n      //     msg: '消息'\n      // }\n\n      that.tableLoading = true;\n      that.$api.transaction.get({\n        data: {\n          type: that.currentDataType,\n          dateFm: that.dateFm,\n          dateTo: that.dateTo,\n          pageSize: that.pager.size,\n          pageIndex: that.pager.index\n        }\n      }).then(function (res) {\n        if (res.code == 0) {\n          that.tdata = res.data.data; // that.pager.index = res.data.current_page;\n\n          that.pager.count = res.data.pageCount || 1;\n        } else {\n          that.$comp.toast({\n            text: '获取失败，请重试.',\n            color: 'error'\n          });\n        } //检测是不是第一次加载\n\n\n        that.firstLoading && (that.firstLoading = false);\n        that.tableLoading = false;\n      }).catch(function (res) {\n        that.$comp.toast({\n          text: '获取失败，请重试.',\n          color: 'error'\n        });\n        that.tableLoading = false; //检测是不是第一次加载\n\n        that.firstLoading && (that.firstLoading = false);\n      });\n    }\n  }\n});\n\n//# sourceURL=webpack:///./client/src/js/transaction_report.js?");

/***/ })

},[["./client/src/js/transaction_report.js","runtime","vendor","common"]]]);